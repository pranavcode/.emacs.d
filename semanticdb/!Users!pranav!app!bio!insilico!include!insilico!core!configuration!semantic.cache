;; Object configuration/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "configuration/"
  :tables
  (list
    (semanticdb-table "parser.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("INCLUDED_INSILICO_INCLUDE_CORE_CONFIGURATION_PARSER_HPP" variable (:constant-flag t) nil [942 997])
            ("insilico/core/helper/file.hpp" include nil nil [999 1039])
            ("insilico/core/helper/string.hpp" include nil nil [1040 1082])
            ("sstream" include (:system-flag t) nil [1084 1102])
            ("string" include (:system-flag t) nil [1103 1120])
            ("insilico" type
               (:members 
                  ( ("configuration" type
                       (:members 
                          ( ("remove_comments" function
                               (:arguments 
                                  ( ("with_comments" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1225 1252]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1197 1589])
                            ("read" function
                               (:arguments 
                                  ( ("neuron_file" variable
                                       (:constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1834 1864])
                                    ("synapse_file" variable
                                       (:constant-flag t
                                        :default-value "\"\""
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1865 1898]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1824 5264]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1143 5267]))                  
                :type "namespace")
                nil [1122 5269]))          
      :file "parser.hpp"
      :pointmax 5315
      :fsize 5314
      :lastmodtime '(21850 18639 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("INCLUDED_INSILICO_INCLUDE_CORE_CONFIGURATION_PARSER_HPP")
          )
)
    (semanticdb-table "observer.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("INCLUDED_INSILICO_INCLUDE_CORE_CONFIGURATION_OBSERVER_HPP" variable (:constant-flag t) nil [880 937])
            ("insilico/core/configuration/error.hpp" include nil nil [939 987])
            ("insilico/core/engine/serial/common.hpp" include nil nil [988 1037])
            ("insilico/core/engine/serial/index.hpp" include nil nil [1038 1086])
            ("insilico/core/engine/serial/value.hpp" include nil nil [1087 1135])
            ("insilico/core/type.hpp" include nil nil [1136 1169])
            ("fstream" include (:system-flag t) nil [1171 1189])
            ("iostream" include (:system-flag t) nil [1190 1209])
            ("sstream" include (:system-flag t) nil [1210 1228])
            ("string" include (:system-flag t) nil [1229 1246])
            ("vector" include (:system-flag t) nil [1247 1264])
            ("insilico" type
               (:members 
                  ( ("configuration" type
                       (:members 
                          ( ("observation_header" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("std::string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [1314 1360])
                            ("pre_computed_keys" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("std::string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [1361 1406])
                            ("pre_computed_indices" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [1407 1447])
                            ("outstream" variable (:type ("std::ofstream" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1448 1472])
                            ("write_buffer" variable (:type ("std::stringstream" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1473 1504])
                            ("header_observed_flag" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol namespacesubparts) [1505 1539])
                            ("step_interval_feature" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol namespacesubparts) [1540 1575])
                            ("step_interval" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol namespacesubparts) [1576 1617])
                            ("step_ctr" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol namespacesubparts) [1576 1617])
                            ("observer_delimiter" variable
                               (:default-value "','"
                                :type "char")
                                (reparse-symbol namespacesubparts) [1640 1670])
                            ("observer_header" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol namespacesubparts) [1671 1699])
                            ("observer" type (:type "struct") (reparse-symbol namespacesubparts) [3025 3572]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1287 6591]))                  
                :type "namespace")
                nil [1266 6593]))          
      :file "observer.hpp"
      :pointmax 6639
      :fsize 6638
      :lastmodtime '(21852 30640 0 0)
      :unmatched-syntax '((semantic-list 6518 . 6588) (VOID 6513 . 6517) (punctuation 6511 . 6512) (punctuation 6510 . 6511) (semantic-list 6459 . 6509) (symbol 6444 . 6459) (symbol 6439 . 6443) (semantic-list 5898 . 6437) (VOID 5893 . 5897) (punctuation 5891 . 5892) (punctuation 5890 . 5891) (semantic-list 5853 . 5889) (symbol 5838 . 5853) (symbol 5833 . 5837) (semantic-list 5762 . 5831) (VOID 5757 . 5761) (punctuation 5755 . 5756) (punctuation 5754 . 5755) (semantic-list 5703 . 5753) (symbol 5689 . 5703) (symbol 5684 . 5688) (semantic-list 5151 . 5682) (VOID 5146 . 5150) (punctuation 5144 . 5145) (punctuation 5143 . 5144) (semantic-list 5106 . 5142) (symbol 5092 . 5106) (symbol 5087 . 5091) (semantic-list 3618 . 5085) (VOID 3613 . 3617) (punctuation 3611 . 3612) (punctuation 3610 . 3611) (semantic-list 3586 . 3609) (symbol 3579 . 3586) (symbol 3574 . 3578) (semantic-list 3109 . 3569) (VOID 3104 . 3108) (punctuation 3102 . 3103) (punctuation 3101 . 3102) (semantic-list 3061 . 3100) (semantic-list 3058 . 3060) (OPERATOR 3050 . 3058) (symbol 3045 . 3049) (semantic-list 2749 . 3023) (VOID 2744 . 2748) (punctuation 2742 . 2743) (punctuation 2741 . 2742) (semantic-list 2738 . 2740) (symbol 2721 . 2738) (symbol 2716 . 2720) (semantic-list 2025 . 2714) (VOID 2020 . 2024) (punctuation 2018 . 2019) (punctuation 2017 . 2018) (semantic-list 2014 . 2016) (symbol 1997 . 2014) (symbol 1992 . 1996) (semantic-list 1926 . 1990) (VOID 1921 . 1925) (punctuation 1919 . 1920) (punctuation 1918 . 1919) (semantic-list 1891 . 1917) (symbol 1870 . 1891) (symbol 1865 . 1869) (semantic-list 1833 . 1863) (VOID 1828 . 1832) (punctuation 1826 . 1827) (punctuation 1825 . 1826) (semantic-list 1806 . 1824) (symbol 1792 . 1806) (symbol 1787 . 1791) (semantic-list 1751 . 1785) (VOID 1746 . 1750) (punctuation 1744 . 1745) (punctuation 1743 . 1744) (semantic-list 1723 . 1742) (symbol 1706 . 1723) (symbol 1701 . 1705) (semantic-list 6548 . 6618) (VOID 6543 . 6547) (punctuation 6541 . 6542) (punctuation 6540 . 6541) (semantic-list 6489 . 6539) (symbol 6474 . 6489) (symbol 6469 . 6473) (semantic-list 5928 . 6467) (VOID 5923 . 5927) (punctuation 5921 . 5922) (punctuation 5920 . 5921) (semantic-list 5883 . 5919) (symbol 5868 . 5883) (symbol 5863 . 5867) (semantic-list 5792 . 5861) (VOID 5787 . 5791) (punctuation 5785 . 5786) (punctuation 5784 . 5785) (semantic-list 5733 . 5783) (symbol 5719 . 5733) (symbol 5714 . 5718) (semantic-list 5181 . 5712) (VOID 5176 . 5180) (punctuation 5174 . 5175) (punctuation 5173 . 5174) (semantic-list 5136 . 5172) (symbol 5122 . 5136) (symbol 5117 . 5121) (semantic-list 3648 . 5115) (VOID 3643 . 3647) (punctuation 3641 . 3642) (punctuation 3640 . 3641) (semantic-list 3616 . 3639) (symbol 3609 . 3616) (symbol 3604 . 3608) (semantic-list 3139 . 3599) (VOID 3134 . 3138) (punctuation 3132 . 3133) (punctuation 3131 . 3132) (semantic-list 3091 . 3130) (semantic-list 3088 . 3090) (OPERATOR 3080 . 3088) (symbol 3075 . 3079) (semantic-list 2779 . 3053) (VOID 2774 . 2778) (punctuation 2772 . 2773) (punctuation 2771 . 2772) (semantic-list 2768 . 2770) (symbol 2751 . 2768) (symbol 2746 . 2750) (semantic-list 2055 . 2744) (VOID 2050 . 2054) (punctuation 2048 . 2049) (punctuation 2047 . 2048) (semantic-list 2044 . 2046) (symbol 2027 . 2044) (symbol 2022 . 2026) (semantic-list 1956 . 2020) (VOID 1951 . 1955) (punctuation 1949 . 1950) (punctuation 1948 . 1949) (semantic-list 1921 . 1947) (symbol 1900 . 1921) (symbol 1895 . 1899) (semantic-list 1863 . 1893) (VOID 1858 . 1862) (punctuation 1856 . 1857) (punctuation 1855 . 1856) (semantic-list 1836 . 1854) (symbol 1822 . 1836) (symbol 1817 . 1821) (semantic-list 1781 . 1815) (VOID 1776 . 1780) (punctuation 1774 . 1775) (punctuation 1773 . 1774) (semantic-list 1753 . 1772) (symbol 1736 . 1753) (symbol 1731 . 1735))
      :lexical-table 
        '(("INCLUDED_INSILICO_INCLUDE_CORE_CONFIGURATION_OBSERVER_HPP")
          )
)
    (semanticdb-table "serial.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("INCLUDED_INSILICO_INCLUDE_CORE_CONFIGURATION_SERIAL_HPP" variable (:constant-flag t) nil [964 1019])
            ("insilico/core/engine.hpp" include nil nil [1021 1056])
            ("insilico/core/helper/file.hpp" include nil nil [1057 1097])
            ("insilico/core/helper/string.hpp" include nil nil [1098 1140])
            ("insilico/core/configuration/observer.hpp" include nil nil [1142 1193])
            ("insilico/core/configuration/parser.hpp" include nil nil [1194 1243])
            ("insilico/core/injector.hpp" include nil nil [1244 1281])
            ("insilico/core/dynamic_params.hpp" include nil nil [1282 1325])
            ("iostream" include (:system-flag t) nil [1327 1346])
            ("sstream" include (:system-flag t) nil [1347 1365])
            ("string" include (:system-flag t) nil [1366 1383])
            ("vector" include (:system-flag t) nil [1384 1401])
            ("insilico" type
               (:members 
                  ( ("configuration" type
                       (:members 
                          ( ("initialize" function
                               (:arguments 
                                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [1525 1534])
                                    ("argv" variable
                                       (:pointer 2
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [1535 1547]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1509 4847])
                            ("finalize" function (:type "void") (reparse-symbol namespacesubparts) [4877 5016]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1424 5019]))                  
                :type "namespace")
                nil [1403 5021]))          
      :file "serial.hpp"
      :pointmax 5067
      :fsize 5066
      :lastmodtime '(21826 42592 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("INCLUDED_INSILICO_INCLUDE_CORE_CONFIGURATION_SERIAL_HPP")
          )
)
    (semanticdb-table "error.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("INCLUDED_INSILICO_INCLUDE_CORE_CONFIGURATION_ERROR_HPP" variable (:constant-flag t) nil [852 906])
            ("iostream" include (:system-flag t) nil [908 927])
            ("cstdlib" include (:system-flag t) nil [928 946])
            ("insilico" type
               (:members 
                  ( ("configuration" type (:type "namespace") (reparse-symbol namespacesubparts) [969 1104]))                  
                :type "namespace")
                nil [948 1106]))          
      :file "error.hpp"
      :pointmax 1152
      :fsize 1151
      :lastmodtime '(21821 16373 0 0)
      :unmatched-syntax '((semantic-list 1024 . 1101) (VOID 1019 . 1023) (punctuation 1017 . 1018) (punctuation 1016 . 1017) (semantic-list 1013 . 1015) (symbol 1001 . 1013) (symbol 996 . 1000))
      :lexical-table 
        '(("INCLUDED_INSILICO_INCLUDE_CORE_CONFIGURATION_ERROR_HPP")
          )
))
  :file "!Users!pranav!app!bio!insilico!include!insilico!core!configuration!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

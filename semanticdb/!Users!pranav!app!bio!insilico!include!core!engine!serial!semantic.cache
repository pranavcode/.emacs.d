;; Object serial/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "serial/"
  :tables
  (list
    (semanticdb-table "common.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("INCLUDED_INSILICO_CORE_ENGINE_SERIAL_COMMON_HPP" variable (:constant-flag t) nil [883 930])
            ("core/type.hpp" include nil nil [932 956])
            ("core/engine/data.hpp" include nil nil [957 988])
            ("iostream" include (:system-flag t) nil [990 1009])
            ("string" include (:system-flag t) nil [1010 1027])
            ("unordered_map" include (:system-flag t) nil [1028 1052])
            ("vector" include (:system-flag t) nil [1053 1070])
            ("insilico" type
               (:members 
                  ( ("engine" type (:type "namespace") (reparse-symbol namespacesubparts) [1093 1338]))                  
                :type "namespace")
                nil [1072 1340]))          
      :file "common.hpp"
      :pointmax 1379
      :fsize 1378
      :lastmodtime '(21758 27635 0 0)
      :unmatched-syntax '((semantic-list 1292 . 1335) (INT 1288 . 1291) (punctuation 1286 . 1287) (punctuation 1285 . 1286) (semantic-list 1282 . 1284) (symbol 1269 . 1282) (symbol 1264 . 1268) (INLINE 1257 . 1263) (semantic-list 1213 . 1255) (INT 1209 . 1212) (punctuation 1207 . 1208) (punctuation 1206 . 1207) (semantic-list 1203 . 1205) (symbol 1191 . 1203) (symbol 1186 . 1190) (INLINE 1179 . 1185) (semantic-list 1155 . 1177) (symbol 1144 . 1154) (punctuation 1142 . 1143) (punctuation 1141 . 1142) (semantic-list 1138 . 1140) (symbol 1125 . 1138) (symbol 1120 . 1124) (INLINE 1113 . 1119))
      :lexical-table 
        '(("INCLUDED_INSILICO_CORE_ENGINE_SERIAL_COMMON_HPP")
          )
)
    (semanticdb-table "index.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("INCLUDED_INSILICO_CORE_ENGINE_SERIAL_INDEX_HPP" variable (:constant-flag t) nil [894 940])
            ("core/type.hpp" include nil nil [942 966])
            ("core/engine/data.hpp" include nil nil [967 998])
            ("core/engine/serial/common.hpp" include nil nil [999 1039])
            ("algorithm" include (:system-flag t) nil [1041 1061])
            ("cstdio" include (:system-flag t) nil [1062 1079])
            ("fstream" include (:system-flag t) nil [1080 1098])
            ("iostream" include (:system-flag t) nil [1099 1118])
            ("string" include (:system-flag t) nil [1119 1136])
            ("unordered_map" include (:system-flag t) nil [1137 1161])
            ("vector" include (:system-flag t) nil [1162 1179])
            ("insilico" type
               (:members 
                  ( ("engine" type (:type "namespace") (reparse-symbol namespacesubparts) [1202 4622]))                  
                :type "namespace")
                nil [1181 4624]))          
      :file "index.hpp"
      :pointmax 4663
      :fsize 4662
      :lastmodtime '(21803 43210 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("INCLUDED_INSILICO_CORE_ENGINE_SERIAL_INDEX_HPP")
          )
)
    (semanticdb-table "value.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("INCLUDED_INSILICO_CORE_ENGINE_SERIAL_VALUE_HPP" variable (:constant-flag t) nil [879 925])
            ("core/configuration/error.hpp" include nil nil [927 966])
            ("core/type.hpp" include nil nil [967 991])
            ("core/engine/data.hpp" include nil nil [992 1023])
            ("core/engine/serial/common.hpp" include nil nil [1024 1064])
            ("algorithm" include (:system-flag t) nil [1066 1086])
            ("cstdio" include (:system-flag t) nil [1087 1104])
            ("fstream" include (:system-flag t) nil [1105 1123])
            ("iostream" include (:system-flag t) nil [1124 1143])
            ("string" include (:system-flag t) nil [1144 1161])
            ("unordered_map" include (:system-flag t) nil [1162 1186])
            ("vector" include (:system-flag t) nil [1187 1204])
            ("insilico" type
               (:members 
                  ( ("engine" type
                       (:members 
                          ( ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4606 4619]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4597 4773])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4851 4864]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4842 5018]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1227 6330])
                    ("decltype" function
                       (:arguments 
                          ( ("" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4606 4619]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4597 4773])
                    ("decltype" function
                       (:arguments 
                          ( ("" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4851 4864]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4842 5018]))                  
                :type "namespace")
                nil [1206 6330]))          
      :file "value.hpp"
      :pointmax 6371
      :fsize 6370
      :lastmodtime '(21812 57400 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("INCLUDED_INSILICO_CORE_ENGINE_SERIAL_VALUE_HPP")
          )
))
  :file "!Users!pranav!app!bio!insilico!include!core!engine!serial!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
